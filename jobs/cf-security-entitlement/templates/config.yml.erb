<%
  database_address = nil
  if_p('cf-security-entitlement.mysql.host') do |host|
    database_address = host
  end.else do
    database_address = link('database').instances[0].address
  end
%>

services:
  - name: my-config
    tags: [ "config" ]
    credentials:
      log_level: "<%= p('cf-security-entitlement.log_level') %>"
      log_no_color: true
      log_json: true
      trusted_ca_certificates: <%= p('cf-security-entitlement.trusted_ca_certificates', []).to_json %>
      cloud_foundry:
        endpoint: <%= p('cf-security-entitlement.cloud_foundry.endpoint') %>
        uaa_endpoint: <%= p('cf-security-entitlement.cloud_foundry.uaa_endpoint') %>
        client_id: <%= p('cf-security-entitlement.cloud_foundry.client_id') %>
        client_secret: <%= p('cf-security-entitlement.cloud_foundry.client_secret') %>
        skip_ssl_validation: <%= p('cf-security-entitlement.cloud_foundry.skip_ssl_validation') %>
      jwt:
        alg: <%= p('cf-security-entitlement.jwt.alg') %>
        secret: "<%= p('cf-security-entitlement.jwt.secret').gsub(/\n/, "\\n") %>"
      sql_cnx_max_open: <%= p('cf-security-entitlement.mysql.cnx.max_open') %>
      sql_cnx_max_idle: <%= p('cf-security-entitlement.mysql.cnx.max_idle') %>
      sql_cnx_max_life: <%= p('cf-security-entitlement.mysql.cnx.max_life') %>
      <% if_p('cf-security-entitlement.ssl_cert') do %><% if_p('cf-security-entitlement.ssl_key') do %>ssl_cert_file: /var/vcap/jobs/cf-security-entitlement/config/ssl_cert.pem
      ssl_key_file:  /var/vcap/jobs/cf-security-entitlement/config/ssl_key.pem<% end %><% end %>
  - name: mysql
    credentials:
      user: "<%= p('cf-security-entitlement.mysql.user') %>"
      password: "<%= p('cf-security-entitlement.mysql.password') %>"
      host: "<%= database_address %>"
      port: "<%= p('cf-security-entitlement.mysql.port') %>"
      database: "<%= p('cf-security-entitlement.mysql.database') %>"
      options: "<%= p('cf-security-entitlement.mysql.options') %>"
